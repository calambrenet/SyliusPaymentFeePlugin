stages:
    - build
    - test


variables:
    SYLIUS_BUILD_DIR: etc/build
    COMPOSER_HOME: tmp/composer
    APP_ENV: test
    APP_SECRET: 2a2f0c6cf200b9b9ff6f33fceabb8643

build:backend:
    image: composer:1
    stage: build
    cache:
        key: ${CI_JOB_NAME}
        paths:
            - vendor
            - node_modules
            - ${COMPOSER_HOME}
    script:
        - composer require "symfony/symfony:^4.1" --no-interaction --no-update
        - composer validate --strict
        - composer install --no-progress --classmap-authoritative --ignore-platform-reqs --no-interaction
        - (cd tests/Application && bin/console cache:warmup --env=test -vvv)
        - (cd tests/Application && bin/console assets:install public --env=test -vvv)
    artifacts:
        paths:
            - vendor
            - node_modules
            - tests/Application
        expire_in: 1 hours

.build:fronentd:
    image: ??
    script:
        - (cd tests/Application && yarn build)
        - (cd tests/Application && yarn install)

test:code:
    stage: test
    image: php:7.2
    script:
        - bin/phpstan.sh
        - bin/ecs.sh
    dependencies:
        - build:backend

test:tests:
    stage: test
    image: php:7.2
    script:
        - (cd tests/Application && bin/console doctrine:database:create --env=test -vvv)
        - (cd tests/Application && bin/console doctrine:schema:create --env=test -vvv)
        - vendor/bin/phpunit
        - vendor/bin/behat --tags="~@javascript"
    artifacts:
        when: on_failure
        paths:
            - ${SYLIUS_BUILD_DIR}/*.log
    dependencies:
        - build:backend

test:behat:
    stage: test
    image: php:7.2
    script:
        # Configure display
        - /sbin/start-stop-daemon --start --quiet --pidfile /tmp/xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -ac -screen 0 1680x1050x16
        - export DISPLAY=:99

        # Download and configure ChromeDriver
        - |
            if [ ! -f $SYLIUS_CACHE_DIR/chromedriver ] || [ "$($SYLIUS_CACHE_DIR/chromedriver --version | grep -c 2.34)" = "0" ]; then
                curl http://chromedriver.storage.googleapis.com/2.34/chromedriver_linux64.zip > chromedriver.zip
                unzip chromedriver.zip
                chmod +x chromedriver
                mv chromedriver $SYLIUS_CACHE_DIR
            fi

        # Run ChromeDriver
        - $SYLIUS_CACHE_DIR/chromedriver > /dev/null 2>&1 &

        # Download and configure Selenium
        - |
            if [ ! -f $SYLIUS_CACHE_DIR/selenium.jar ] || [ "$(java -jar $SYLIUS_CACHE_DIR/selenium.jar --version | grep -c 3.4.0)" = "0" ]; then
                curl http://selenium-release.storage.googleapis.com/3.4/selenium-server-standalone-3.4.0.jar > selenium.jar
                mv selenium.jar $SYLIUS_CACHE_DIR
            fi

        # Run Selenium
        - java -Dwebdriver.chrome.driver=$SYLIUS_CACHE_DIR/chromedriver -jar $SYLIUS_CACHE_DIR/selenium.jar > /dev/null 2>&1 &

        # Run webserver
        - (cd tests/Application && bin/console server:run 127.0.0.1:8080 -d public --env=test --quiet > /dev/null 2>&1 &)

        - (cd tests/Application && bin/console doctrine:database:create --env=test -vvv)
        - (cd tests/Application && bin/console doctrine:schema:create --env=test -vvv)

        - bin/behat --strict -vvv --no-interaction || bin/behat --strict -vvv --no-interaction --rerun
    artifacts:
        when: on_failure
        paths:
            - ${SYLIUS_BUILD_DIR}/*.log
    dependencies:
        - build:backend
